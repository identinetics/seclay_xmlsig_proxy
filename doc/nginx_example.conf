
#user  nobody;
worker_processes  1;

error_log  /Users/admin/Library/Logs/nginx/error.log;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr [$time_local] $upstream_addr "$request" '
                      '$status $body_bytes_sent'
                      '($upstream_response_time)';

    access_log  /Users/admin/Library/Logs/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


    server {
        listen       8080;
        server_name  localhost;
        # Use variables for docker - (proxy_redirect requires hard-coded mapping)
        #resolver 127.0.0.11 valid=30s;
        #set $pvzdweb_fqdn localhost:8000;
        #set $sigproxy_fqdn localhost:8001;
        location / {
          proxy_pass http://localhost:8000;
          proxy_redirect default;
        }
        location /admin/ {
          proxy_pass http://localhost:8000
          ;
          proxy_redirect default;
        }
        location /sigproxyapi/ {
          # I need this location, otherwise /SigProxy would match
          proxy_pass http://localhost:8000;
          #proxy_redirect default;
          #proxy_redirect localhost:8000/sigproxyapi/ http://localhost:8080/sigproxyapi/;
        }
        location /SigProxy/ {
          proxy_pass http://localhost:8001;
          proxy_redirect default;
          #proxy_redirect $sigproxy_fqdn/ http://localhost:8080/;
          #proxy_set_header Host $host; # needed if backend services uses vhost
          #proxy_set_header X-Forwarded-Host $host;
          #proxy_set_header X-Forwarded-Proto https;
          #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    include servers/*;
}
